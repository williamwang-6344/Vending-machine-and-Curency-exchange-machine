/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package CC14_Group_02_Assignment_2;

import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Parameter;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

public class ProductTest {

    String filePath = "../app/src/main/resources/Databases/ProductDatabase.json";
    String invalidFilePath = "../app/src/test/resources/DatabaseTesting/InvalidProductDatabase.json";
    String fileNotFound = "../app/src/test/resources/DatabaseTesting/FileNotFound.json";
    String invalidFormat = "../app/src/test/resources/DatabaseTesting/InvalidFormat.csv";

    @Test
    public void TestParseProductDatabaseInvalid() {
        File productDatabase = new File(invalidFilePath);
        assertEquals(0, Product.parseProductDatabase(productDatabase).size());
    }

    @Test
    public void TestViewDetailValid() {
        File file = new File(filePath);
        List<Product> products = Product.parseProductDatabase(file);
        List<Item> items = new ArrayList<>();
        Item item1 = new Item("Candies", 4001, "Mentos", 7, 3.50f);
        Item item2 = new Item("Candies", 4002, "Sour Patch", 7, 4.50f);
        Item item3 = new Item("Candies", 4003, "Skittles", 7, 2.50f);
        items.add(item1);
        items.add(item2);
        items.add(item3);

        Product product = new Product(products.get(3).getCategory(), items);

        String expected = "";
        expected += ("\n["+0+"]\n");
        expected += ("Item Code: " + item1.getCode() + "\n");
        expected += ("Item Name: " + item1.getName() + "\n");
        expected += ("Item Quantity: " + item1.getQuantity() + "\n");
        expected += ("Item Price: " + item1.getPrice() + "\n");

        expected += ("\n["+1+"]\n");
        expected += ("Item Code: " + item2.getCode() + "\n");
        expected += ("Item Name: " + item2.getName() + "\n");
        expected += ("Item Quantity: " + item2.getQuantity() + "\n");
        expected += ("Item Price: " + item2.getPrice() + "\n");

        expected += ("\n["+2+"]\n");
        expected += ("Item Code: " + item3.getCode() + "\n");
        expected += ("Item Name: " + item3.getName() + "\n");
        expected += ("Item Quantity: " + item3.getQuantity() + "\n");
        expected += ("Item Price: " + item3.getPrice() + "\n");

        assertEquals(expected, product.viewDetail(product));
    }

    @Test
    public void TestViewDetailInvalidProduct() {
        File file = new File(filePath);
        List<Product> products = Product.parseProductDatabase(file);
        List<Item> items = new ArrayList<>();
        Item item1 = new Item("Candies", 4001, "Mentos", 7, 3.50f);
        Item item2 = new Item("Candies", 4002, "Sour Patch", 7, 4.50f);
        Item item3 = new Item("Candies", 4003, "Skittles", 7, 2.50f);
        items.add(item1);
        items.add(item2);
        items.add(item3);

        Product product = null;

        String expected = "\nThe vending machine doesn't store the Product\n";
        assertEquals(expected, Product.viewDetail(null));
    }


    @Test
    public void TestViewSimple() {
        File file = new File(filePath);
        List<Product> products = Product.parseProductDatabase(file);
        List<Item> items = new ArrayList<>();
        Item item1 = new Item("Candies", 4001, "Mentos", 7, 3.50f);
        Item item2 = new Item("Candies", 4002, "Sour Patch", 7, 4.50f);
        Item item3 = new Item("Candies", 4003, "Skittles", 7, 2.50f);
        items.add(item1);
        items.add(item2);
        items.add(item3);

        Product product = new Product(products.get(3).getCategory(), items);
        int index = 2;

        String expected = String.format("===== Category: %s -> [%d] =====\n", product.getCategory(), index);
        expected += (1 + ". " + item1.getName() + "\n");
        expected += (2 + ". " + item2.getName() + "\n");
        expected += (3 + ". " + item3.getName() + "\n");

        assertEquals(expected, Product.viewSimple(product, index));
    }

    @Test
    public void TestViewSimpleInvalidArguments() {
        File file = new File(filePath);
        List<Product> products = Product.parseProductDatabase(file);
        List<Item> items = new ArrayList<>();
        Item item1 = new Item("Candies", 4001, "Mentos", 7, 3.50f);
        Item item2 = new Item("Candies", 4002, "Sour Patch", 7, 4.50f);
        Item item3 = new Item("Candies", 4003, "Skittles", 7, 2.50f);
        items.add(item1);
        items.add(item2);
        items.add(item3);

        Product product = null;
        int index = 2;
        String expected = "\nThe vending machine doesn't store the Product\n";
        assertEquals(expected, Product.viewSimple(product, index));

        product = new Product(products.get(3).getCategory(), items);
        // #TODO: These tests have been broken by fixes to the following function
        index = 3;
        //assertEquals(expected, Product.viewSimple(product, index));
        //

        index = -1;
        //assertEquals(expected, Product.viewSimple(product, index));
    }

}
